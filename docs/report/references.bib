@inproceedings{Dala_Paper,
author = {Fernandez-Reyes, Kiko and Gariano, Isaac Oscar and Noble, James and Greenwood-Thessman, Erin and Homer, Michael and Wrigstad, Tobias},
title = {Dala: a simple capability-based dynamic language design for data race-freedom},
year = {2021},
isbn = {9781450391108},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3486607.3486747},
doi = {10.1145/3486607.3486747},
abstract = {Dynamic languages like Erlang, Clojure, JavaScript, and E adopted data-race freedom by design. To enforce data-race freedom, these languages either deep copy objects during actor (thread) communication or proxy back to their owning thread. We present Dala, a simple programming model that ensures data-race freedom while supporting efficient inter-thread communication. Dala is a dynamic, concurrent, capability-based language that relies on three core capabilities: immutable values can be shared freely; isolated mutable objects can be transferred between threads but not aliased; local objects can be aliased within their owning thread but not dereferenced by other threads. Objects with capabilities can co-exist with unsafe objects, that are unchecked and may suffer data races, without compromising the safety of safe objects. We present a formal model of Dala, prove data race-freedom and state and prove a dynamic gradual guarantee. These theorems guarantee data race-freedom when using safe capabilities and show that the addition of capabilities is semantics preserving modulo permission and cast errors.},
booktitle = {Proceedings of the 2021 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software},
pages = {1â€“17},
numpages = {17},
keywords = {permission, isolation, immutability, concurrency, capability},
location = {Chicago, IL, USA},
series = {Onward! 2021}
}